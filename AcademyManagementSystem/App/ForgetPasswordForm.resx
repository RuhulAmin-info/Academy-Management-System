<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BackIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="ExitIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABKFJREFUeF7t
        nc1qFEEUhQfBldI9CYgP4d/KmKfQjeJC38OlrqK7RF/BvIQrwekOLlyruNOVCGo6E0gg4lg3c2vovk7P
        T83p7qqp+8GFUNWcW5xDTXfPEKqnKIqiKIqiKIoSAqMPvYuHeXq/yPr7RZZ+MnVsahR5DU0ZL/r75A15
        xHY1y1Hev1fk6RexGC1ZxiPyim3DMxr1Lhxl6fOpzbXq6q/xbIe8YxtxaBjuRaGwjRjOP6ZM2qLRSZEl
        u8VBsvX9zdVLfGm0kAfkRZEne2NvKl6ZndK/y5euBt2cptwzvg7zjet8iSI4Pti4YTz6VvHMeAi50Y+f
        pkrCJn0NYz4cymnZO/KSp93hR9tSIMkuTylzKAb9l1Xv+q95yh0j9Lkimie3eUqZQzFI7lS8M17ylDtG
        hF54JqI/3l65zFPKHMirsnemhjzljhAc8bCyIHD/4IKRAfcPLhgZcP/ggpEB9w8uGBlw/+CCkQH3Dy4Y
        GXD/4IKRAfcPLhgZcP/ggpEB9w8uGBlw/+CCkQH3Dy44hWG2eY3/7Iym1gD3Dy4oKAb9Z0b3T5Enj3mo
        dQ4H6QOzhrOjPH3BQzDK3lHxsDtwwRIchtXuJBQbhl0HOhSra4uH3YELMvQzsNGbGMF1dpilD/mSxqFe
        09aA/IlaaPu9Q/j3emlIKztF7oxJ7yx5xJdAEPp+B0J0EUpbYRCih/+BEG2G0mYYhOgTRiBEG6G0HQYh
        eoUTCNFkKF2EQYh+YQVCNBFKV2EQomd4gRDIULoMgxB9wwyEQITSdRiE6B1uIMQqofgQBiH6hx0I4RKK
        L2EQYg3hB0IsE4pPYRBiHesRCLFIKL6FQYi1rE8gxKxQfAyDEOtZr0CIum9op421+c1xHWJN6xcIUbNT
        ytX5zrDItfGwO3BBEDNC8SYMQq6Ph92BC4KouWdQLfSe0hZyfTzsDlwQwIwwbHkTilwbD7sDF1wRvamj
        BVdg1qPtMi+PbSLWsz6BLPKe4WMoYi3rEcgyL32+hSLWEX4gy4Rh8SkUsYawA3EJw+JLKKJ/uIGsEobF
        h1BE7zADQYRh6ToU0Te8QJBhWLoMRfQMK5AmwrB0FYroF04gTYZh6SIU0SuMQNoIw9J2KKKP/4G0GYal
        zVBED78D6SIMS1uhCH1/A9F/2HEELljC7JAnJe1Wdobkv52SJ095CsJEl4uH3YELCjiUTsKwTEIBh0GU
        vaPiYXfgglPQf4teArhgZMD9gwtGBtw/uGBkwP2DC0YG3D+4YGTA/YMLRgbcP7hgZMD9gwtGBtw/uGBk
        wP2DC0YG3D+4YGTA/YMLRgbcPyNyVBbUA10W5+f7zaTsnamCp9wxItUjjw6SLZ5S5lBkyXbFO8yRR+JQ
        sDzZ4yllDsa7VxXvEIeC8Y83JdH0hI6E42mlht+D/i3jFf7YvLqDJTWUen6927hpPGrmYEmi5ujV0/E5
        fcm23ujtiWx0zzj/mKrsDFO4o1ctejixe8EPJyb4+O4d00DuFK36au74bgttvSn3FC1ZxiP4x1QddHMa
        P32dPxJ/MlU5DTTSGhaD9CM92pI3sBu4oiiKoiiKoihKo/R6/wAWHnwjsXf9EwAAAABJRU5ErkJggg==
</value>
  </data>
</root>